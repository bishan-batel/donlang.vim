# main method (args parameter optional)
import std 

unsafe extern cos(n: f64): f64

unsafe extern putc(str: char): i32
unsafe extern puts(str: string): i32

# "multiple" is for varargs, having a variable number of arguments of the last time,
extern printf(str: string, multiple fargs: string): i32


# one liner function, explicitly needs type parameters
def get_funny_number(): f64 = 69.420

def funny_delta(n: f64): f64 {
  return n - 69
}

#: 
  Funny multiline comment
:#

# main function, could either return void or an i32 
def main() {
  printf("Bruh Moment\n")

  # variable creation with let  
  let x = 0


  # switch statements
  let num = get_funny_number()

  match num {
    # matches for 69
    69 => {
      printf("Number is 69\n")
    }

    420 => printf("hehe funny\n")

    # Default branch
    default => {
      printf("number is not funny\n")
    }
  }

  while true {
  }

  #let msg = if num is 69 then "nice" else "not nice"


  return 0
}

pub data Point(x: i32, y: i32)

pub class Vector2f {
  var x: f32
  var y: f32

  pub constructor(_x: f32, _y: f32) {
    y = _y
    self.y = _y # optional use of 'self'
  }
  
  # Empty Constructor (one line while calling another constructor)
  pub constructor() => constructor(0f, 0f)

  operator +(x: f32) {
  }
}
